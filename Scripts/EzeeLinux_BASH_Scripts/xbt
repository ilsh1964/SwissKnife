#!/bin/bash

# XBT -- External Backup Tool (v. 1.7) -- by Joe Collins (December 6th, 2017)
#
# A Script to create a snapshot backup of /etc and /home on a dedicated
# external USB drive.
#
# ...And away we go!

# Print help information.

if [ "$1" == "--help" ]; then
    clear
    echo "
 XBT -- External Backup Tool -- Help
 (v. 1.7)

 Commands:

 xbt = Makes an XBT backup.
 xbt --help = Prints this help information.
 xbt --restore = FUlly restores host machine's /home directory.

 Description:

 XBT will update files that have changed, remove files that have been
 deleted and add any new files that have been created since the last backup.
 The initial backup can take a lot of time if you have a lot of data stored
 in your system's /home directory. XBT creates a directory with the host name
 of the machine it's backing up from inside XBT-Backups. This allows users to
 share one XBT_Drive with multiple machines.

 The directory structure and all files are stored openly to allow users easy
 access if they only need to retrieve a few files or directories using a file
 manager. Data from /homecan be restored with the built in "xbt restore"
 command if the user wants to roll back to the exact state of /home when the
 last backup was taken.

 A simple logfile is added to the XBT_Drive that shows when each
 backup is taken and any errors that might occur. This file is appended
 every time XBT is run. The Log file is placed in XBT-Backups.

 Requirements:

 XBT is designed to work with Ubuntu and Linux Mint but it should run
 on many other Linux distributions. User inned to prepare an XBT_Drive.
 This can be any USB storage device.  The dedicated USB drive must be
 formatted to a Linux native file system such as Ext4 to ensure that file
 permissions will be stored unchanged. The USB drive needs to have enough
 free capacity to store all data in /home on all of the machines wyou want to
 use the drive for. . The drive MUST be labeled as "XBT_Drive" for the script to
 run. If XBT_Drive is not detected, the script exits with an error.
"
   exit
fi

# XBT checks for backup media:

if [ ! -d /media/"$USER"/XBT_Drive ]; then
	echo "NO DRIVE FOUND! Please make sure XBT_Drive USB is connected."
    exit 1
fi

# Check for invalid arugunemts

# Tell 'em who we are:

clear
echo "
XBT -- External Backup Tool (Version 1.7)
"

# Make sure sudo is on:

echo "Checking sudo permissions..."
sudo ls >/dev/null

# Check for "--restore" argument and run restore action if found.

if [ "$1" == "--restore" ]; then
    echo "WARNING!"
    echo "Any new files created in /home since last backup will be deleded!"
    echo $'\n'$"Do you want to restore now? [y/N]"
    read choice
        if test "$choice" == "y"; then
        echo "Restoring /home..."
        sudo rsync -aH --delete --info=progress2 \
        /media/"$USER"/XBT_Drive/XBT_Backups/"$HOSTNAME"/Home_Backup/ \
        /home/
            if [ "$?" == "0" ]; then
                echo "Restoration complete"
                echo "Wait! Syncing drives..."
                sync
                echo "It's now safe to remove XBT_Drive. Thanks for using XBT!"
                echo "Restart machine for changes to take effect."
                exit
            else
                echo "Restoration FAILED! Could not find backup directory."
                exit 1
            fi
        else
        echo "XBT restoration canceled."
        exit
        fi
fi

if  [ -n "$1"  ]; then
    echo "XBT error: Invalid argumnent. Try xbt, xbt --help or xbt --resore."
    exit 1
fi

# Log file is created in /tmp:

echo "Backup sent to XBT_Drive USB from $HOSTNAME by '$USER' on:" \
> /tmp/backup.log
date >> /tmp/backup.log
echo "Errors:" >> /tmp/backup.log

# Begin backup operations using rsync:
# (User will be prompted for sudo password if XBT was not started with sudo.)



# Creating machine specific directories:

mkdir -p /media/"$USER"/XBT_Drive/XBT_Backups/"$HOSTNAME"

# Starting synchronization:

echo "
Backing up /etc..."
sudo rsync -aH --delete --info=progress2 /etc/ \
/media/"$USER"/XBT_Drive/XBT_Backups/"$HOSTNAME"/Etc_Backup/ 2>> /tmp/backup.log
echo "
Backing up /home..."
sudo rsync -aH --delete --info=progress2 /home/ \
/media/"$USER"/XBT_Drive/XBT_Backups/"$HOSTNAME"/Home_Backup/ 2>> /tmp/backup.log

echo "--------------------
-  All backed up!  -
--------------------" | tee -a /tmp/backup.log

# Log file is created or appended on XBT_Drive from /tmp:
# (backup.log will be removed from /tmp on next reboot.)

cat /tmp/backup.log >> /media/"$USER"/XBT_Drive/XBT_Backups/xbt-backup.log

# Writing all cached data to drives and exiting:

echo "Wait! Syncing drives..."
sync
echo "...Done.
It's now safe to remove XBT_Drive. Thanks for using XBT!
"
exit
