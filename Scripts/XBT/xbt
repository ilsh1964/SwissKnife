#!/bin/bash

# XBT -- External Backup Tool (v. 1.6) -- by Joe Collins (November 19th, 2017)
# The USB drive MUST be labeled as "XBT_Drive" for the script to run.

if [ ! -d /media/"$USER"/XBT_Drive ]; then
	echo "NO DRIVE FOUND! Please make sure XBT_Drive USB is connected." ; exit 1
fi

clear
echo "
XBT -- External Backup Tool (Version 1.6)
"
# Log file is created in /tmp:

echo "Backup sent to XBT_Drive USB from $HOSTNAME by '$USER' on:" \
> /tmp/backup.log
date >> /tmp/backup.log
echo "Errors:" >> /tmp/backup.log

# Begin backup operations using rsync:
# (User will be prompted for sudo password if XBT was not started with sudo.)

# Make sure sudo is on:

echo "Checking sudo permissions..."
sudo ls >/dev/null

# Creating machine specific directories:

mkdir -p /media/"$USER"/XBT_Drive/XBT_Backups/"$HOSTNAME"

# Starting synchronization:

echo "
Backing up /home..."
sudo rsync -aq --delete --exclude '/home/cya' --exclude '/home/"$USER"/.cache' /media/"$USER"/XBT_Drive/XBT_Backups/"$HOSTNAME"/home/  2>> /tmp/backup.log
echo "--------------------
-  All backed up!  -
--------------------" | tee -a /tmp/backup.log

# Log file is created or appended on XBT_Drive from /tmp:
# (backup.log will be removed from /tmp on next reboot.)

cat /tmp/backup.log >> /media/"$USER"/XBT_Drive/XBT_Backups/xbt-backup.log

# Writing all cached data to drives and exiting:

echo "Wait! Syncing drives..."
sync
echo "...Done.
It's now safe to remove XBT_Drive. Thanks for using XBT!
"
exit

