Code:
=====

import argparse

def fib(n):
    a, b = 0, 1
    for i in range(n):
        a, b = b, a+b
    return a


def Main():
    parser = argparse.ArgumentParser()

    group = parser.add_mutually_exclusive_group()    # this 3 lines in group. Possible args is -v OR -q but not both
    group.add_argument("-v", "--verbose", action="store_true")
    group.add_argument("-q", "--quiet", action="store_true")

    parser.add_argument("num", help="The Fibonacci number you wish to calculate.", type=int)
    parser.add_argument("-o", "--output", help="Output the result to a file", action="store_true")

    args = parser.parse_args()
    
    result = fib(args.num)
    if args.verbose:
        print "The " + str(args.num)+ "th fib number is " + str(result)
    elif args.quiet:
        print result
    else:
        print "Fib("+str(args.num)+") = " + str(result)

    if args.output:
        f = open("fibonacci.txt","a")
        f.write(str(result) + '\n')

if __name__ == '__main__':
    Main()


Console Output:
==============

$ python x.py -v 12
  The 12th fib number is 144

$ python x.py -q 12
144

$ python x.py -vq 12
  usage: x.py [-h] [-v | -q] [-o] num
  x.py: error: argument -q/--quiet: not allowed with argument -v/--verbose

$ python x.py -h 12
  usage: x.py [-h] [-v | -q] [-o] num

  positional arguments:
    num            The Fibonacci number you wish to calculate.

  optional arguments:
   -h, --help     show this help message and exit
   -v, --verbose
   -q, --quiet
   -o, --output   Output the result to a file

$ python x.py -qo 12
144

$ more fibonacci.txt 
144




